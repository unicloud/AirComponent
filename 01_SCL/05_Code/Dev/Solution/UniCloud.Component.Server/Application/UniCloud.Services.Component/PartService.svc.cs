 

// ******************************************************
// DO NOT CHANGE THE CONTENT OF THIS FILE
// This file was generated by the T4 engine and the 
// contents of this source code will be changed after
// the custom tool was run.
// ******************************************************
using System;
using System.Collections.Generic;
using System.ServiceModel;
using UniCloud.Application;
using UniCloud.DataObjects;
using UniCloud.ServiceContracts;
using UniCloud.Infrastructure;
using UniCloud.Query;
using UniCloud.Domain.Model;

namespace UniCloud.Services
{
	public class PartService : IPartService
	{
		#region 服务接口
	    		 private readonly ICcOrderService _ICcOrderService = ServiceLocator.Instance.GetService<ICcOrderService>();
		 		 private readonly ICcOrderQuery _ICcOrderQuery = ServiceLocator.Instance.GetService<ICcOrderQuery>();
		 		 private readonly ICcpMainService _ICcpMainService = ServiceLocator.Instance.GetService<ICcpMainService>();
		 		 private readonly ICcpMainQuery _ICcpMainQuery = ServiceLocator.Instance.GetService<ICcpMainQuery>();
		 		 private readonly IIntUnitService _IIntUnitService = ServiceLocator.Instance.GetService<IIntUnitService>();
		 		 private readonly IIntUnitQuery _IIntUnitQuery = ServiceLocator.Instance.GetService<IIntUnitQuery>();
		 		 private readonly IOilHistoryService _IOilHistoryService = ServiceLocator.Instance.GetService<IOilHistoryService>();
		 		 private readonly IOilHistoryQuery _IOilHistoryQuery = ServiceLocator.Instance.GetService<IOilHistoryQuery>();
		 		 private readonly IOilAnalysisQuery _IOilAnalysisQuery = ServiceLocator.Instance.GetService<IOilAnalysisQuery>();
		 		 private readonly IOilAnalysisService _IOilAnalysisService = ServiceLocator.Instance.GetService<IOilAnalysisService>();
		 		 private readonly IPartsMonitorService _IPartsMonitorService = ServiceLocator.Instance.GetService<IPartsMonitorService>();
		 		 private readonly IPartsMonitorQuery _IPartsMonitorQuery = ServiceLocator.Instance.GetService<IPartsMonitorQuery>();
		 		 private readonly IPnRegService _IPnRegService = ServiceLocator.Instance.GetService<IPnRegService>();
		 		 private readonly IPnRegQuery _IPnRegQuery = ServiceLocator.Instance.GetService<IPnRegQuery>();
		 		 private readonly IScnMainService _IScnMainService = ServiceLocator.Instance.GetService<IScnMainService>();
		 		 private readonly IScnMainQuery _IScnMainQuery = ServiceLocator.Instance.GetService<IScnMainQuery>();
		 		 private readonly ISnHistoryService _ISnHistoryService = ServiceLocator.Instance.GetService<ISnHistoryService>();
		 		 private readonly ISnHistoryQuery _ISnHistoryQuery = ServiceLocator.Instance.GetService<ISnHistoryQuery>();
		 		 private readonly ISnRegService _ISnRegService = ServiceLocator.Instance.GetService<ISnRegService>();
		 		 private readonly ISnRegQuery _ISnRegQuery = ServiceLocator.Instance.GetService<ISnRegQuery>();
		 		 private readonly IWfHistoryService _IWfHistoryService = ServiceLocator.Instance.GetService<IWfHistoryService>();
		 		 private readonly IWfHistoryQuery _IWfHistoryQuery = ServiceLocator.Instance.GetService<IWfHistoryQuery>();
		 		 private readonly IWorkScopeService _IWorkScopeService = ServiceLocator.Instance.GetService<IWorkScopeService>();
		 		 private readonly IWorkScopeQuery _IWorkScopeQuery = ServiceLocator.Instance.GetService<IWorkScopeQuery>();
		 		 private readonly IEgtMarginService _IEgtMarginService = ServiceLocator.Instance.GetService<IEgtMarginService>();
		 		 private readonly IEgtMarginQuery _IEgtMarginQuery = ServiceLocator.Instance.GetService<IEgtMarginQuery>();
		 		 private readonly IMajorEventService _IMajorEventService = ServiceLocator.Instance.GetService<IMajorEventService>();
		 		 private readonly IMajorEventQuery _IMajorEventQuery = ServiceLocator.Instance.GetService<IMajorEventQuery>();
		 		 private readonly IAttactDocumentService _IAttactDocumentService = ServiceLocator.Instance.GetService<IAttactDocumentService>();
		 		 private readonly IAttactDocumentQuery _IAttactDocumentQuery = ServiceLocator.Instance.GetService<IAttactDocumentQuery>();
		 		 private readonly IAcIntUnitUtilizaService _IAcIntUnitUtilizaService = ServiceLocator.Instance.GetService<IAcIntUnitUtilizaService>();
		 		 private readonly IAcIntUnitUtilizaQuery _IAcIntUnitUtilizaQuery = ServiceLocator.Instance.GetService<IAcIntUnitUtilizaQuery>();
		 		 private readonly IAirBusMSCNService _IAirBusMSCNService = ServiceLocator.Instance.GetService<IAirBusMSCNService>();
		 		 private readonly IAirBusMSCNQuery _IAirBusMSCNQuery = ServiceLocator.Instance.GetService<IAirBusMSCNQuery>();
		 		 private readonly IAdsbComplyService _IAdsbComplyService = ServiceLocator.Instance.GetService<IAdsbComplyService>();
		 		 private readonly IAdsbComplyQuery _IAdsbComplyQuery = ServiceLocator.Instance.GetService<IAdsbComplyQuery>();
		 		 private readonly IAdsbQuery _IAdsbQuery = ServiceLocator.Instance.GetService<IAdsbQuery>();
		 		 private readonly IAdsbService _IAdsbService = ServiceLocator.Instance.GetService<IAdsbService>();
		 		 private readonly IAcStructureQuery _IAcStructureQuery = ServiceLocator.Instance.GetService<IAcStructureQuery>();
		 		 private readonly IAcStructureService _IAcStructureService = ServiceLocator.Instance.GetService<IAcStructureService>();
		 		#endregion

		    public CcOrderDataObjectList CreateCcOrders(CcOrderDataObjectList ccOrders)
	        {
			    try
			    {
				return _ICcOrderService.CreateCcOrders(ccOrders);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteCcOrders(IDList ccOrderIDs)
	        {
			    try
			    {
				return _ICcOrderService.DeleteCcOrders(ccOrderIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcOrderDataObjectList UpdateCcOrders(CcOrderDataObjectList ccOrders)
	        {
			    try
			    {
				return _ICcOrderService.UpdateCcOrders(ccOrders);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcOrderResultData CommitCcOrders(CcOrderResultData ccOrderData)
	        {
			    try
			    {
				return _ICcOrderService.CommitCcOrders(ccOrderData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcOrderDataObject GetFullCcOrderByID(Int32 id)
	        {
			    try
			    {
				return _ICcOrderService.GetFullCcOrderByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcOrderDataObjectList GetFullCcOrders()
	        {
			    try
			    {
				return _ICcOrderService.GetFullCcOrders();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public Boolean VerifyCcOrder(Int32 ccOrderId)
	        {
			    try
			    {
				return _ICcOrderService.VerifyCcOrder(ccOrderId);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public Boolean VerifyEngCcOrder(Int32 ccOrderId)
	        {
			    try
			    {
				return _ICcOrderService.VerifyEngCcOrder(ccOrderId);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcOrderDataObjectList GetCcOrders(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _ICcOrderQuery.GetCcOrders(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcOrderWithPagination GetCcOrderWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _ICcOrderQuery.GetCcOrderWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcOrderDataObject GetCcOrderByID(Int32 id)
	        {
			    try
			    {
				return _ICcOrderQuery.GetCcOrderByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcOrderWithPagination GetEngCcOrderWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _ICcOrderQuery.GetEngCcOrderWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcOrderDataObject GetEngCcOrderByID(Int32 id)
	        {
			    try
			    {
				return _ICcOrderQuery.GetEngCcOrderByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcpMainDataObjectList CreateCcpMains(CcpMainDataObjectList ccpMains)
	        {
			    try
			    {
				return _ICcpMainService.CreateCcpMains(ccpMains);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteCcpMains(IDList ccpMainIDs)
	        {
			    try
			    {
				return _ICcpMainService.DeleteCcpMains(ccpMainIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcpMainDataObjectList UpdateCcpMains(CcpMainDataObjectList ccpMains)
	        {
			    try
			    {
				return _ICcpMainService.UpdateCcpMains(ccpMains);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcpMainResultData CommitCcpMains(CcpMainResultData ccpMainData)
	        {
			    try
			    {
				return _ICcpMainService.CommitCcpMains(ccpMainData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcpMainDataObject GetFullCcpMainByID(Int32 id)
	        {
			    try
			    {
				return _ICcpMainService.GetFullCcpMainByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcpMainDataObjectList GetFullCcpMains()
	        {
			    try
			    {
				return _ICcpMainService.GetFullCcpMains();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcpMainDataObjectList QueryAllCcpMain(String actype, String itemNo, String ata, String stateStation)
	        {
			    try
			    {
				return _ICcpMainService.QueryAllCcpMain(actype, itemNo, ata, stateStation);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public Boolean VerifyCcpMain(Int32 ccpMainId)
	        {
			    try
			    {
				return _ICcpMainService.VerifyCcpMain(ccpMainId);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcpMainDataObjectList GetCcpMains(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _ICcpMainQuery.GetCcpMains(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcpMainWithPagination GetCcpMainWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _ICcpMainQuery.GetCcpMainWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CcpMainDataObject GetCcpMainByID(Int32 id)
	        {
			    try
			    {
				return _ICcpMainQuery.GetCcpMainByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IntUnitDataObjectList CreateIntUnits(IntUnitDataObjectList intUnits)
	        {
			    try
			    {
				return _IIntUnitService.CreateIntUnits(intUnits);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteIntUnits(IDList intUnitIDs)
	        {
			    try
			    {
				return _IIntUnitService.DeleteIntUnits(intUnitIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IntUnitDataObjectList UpdateIntUnits(IntUnitDataObjectList intUnits)
	        {
			    try
			    {
				return _IIntUnitService.UpdateIntUnits(intUnits);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IntUnitResultData CommitIntUnits(IntUnitResultData intUnitData)
	        {
			    try
			    {
				return _IIntUnitService.CommitIntUnits(intUnitData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IntUnitDataObjectList GetIntUnits(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IIntUnitQuery.GetIntUnits(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IntUnitWithPagination GetIntUnitWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IIntUnitQuery.GetIntUnitWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IntUnitDataObject GetIntUnitByID(Int32 id)
	        {
			    try
			    {
				return _IIntUnitQuery.GetIntUnitByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilHistoryDataObjectList CreateOilHistorys(OilHistoryDataObjectList oilHistorys)
	        {
			    try
			    {
				return _IOilHistoryService.CreateOilHistorys(oilHistorys);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteOilHistorys(IDList oilHistoryIDs)
	        {
			    try
			    {
				return _IOilHistoryService.DeleteOilHistorys(oilHistoryIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilHistoryDataObjectList UpdateOilHistorys(OilHistoryDataObjectList oilHistorys)
	        {
			    try
			    {
				return _IOilHistoryService.UpdateOilHistorys(oilHistorys);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilHistoryResultData CommitOilHistorys(OilHistoryResultData oilHistoryData)
	        {
			    try
			    {
				return _IOilHistoryService.CommitOilHistorys(oilHistoryData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilHistoryDataObject GetFullOilHistoryByID(Int32 id)
	        {
			    try
			    {
				return _IOilHistoryService.GetFullOilHistoryByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilHistoryDataObjectList GetFullOilHistorys()
	        {
			    try
			    {
				return _IOilHistoryService.GetFullOilHistorys();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilHistoryDataObjectList GetOilHistorys(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IOilHistoryQuery.GetOilHistorys(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilHistoryWithPagination GetOilHistoryWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IOilHistoryQuery.GetOilHistoryWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilHistoryDataObject GetOilHistoryByID(Int32 id)
	        {
			    try
			    {
				return _IOilHistoryQuery.GetOilHistoryByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilAnalysisDataObjectList GetOilAnalysiss(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IOilAnalysisQuery.GetOilAnalysiss(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilAnalysisWithPagination GetOilAnalysisWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IOilAnalysisQuery.GetOilAnalysisWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilAnalysisDataObject GetOilAnalysisByID(Int32 id)
	        {
			    try
			    {
				return _IOilAnalysisQuery.GetOilAnalysisByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilAnalysisDataObjectList GetOilAnalysisBySnData(OilAnalysisDataObject searchObj)
	        {
			    try
			    {
				return _IOilAnalysisQuery.GetOilAnalysisBySnData(searchObj);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilAnalysisDataObjectList CreateOilAnalysiss(OilAnalysisDataObjectList oilAnalysiss)
	        {
			    try
			    {
				return _IOilAnalysisService.CreateOilAnalysiss(oilAnalysiss);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteOilAnalysiss(IDList oilAnalysisIDs)
	        {
			    try
			    {
				return _IOilAnalysisService.DeleteOilAnalysiss(oilAnalysisIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilAnalysisDataObjectList UpdateOilAnalysiss(OilAnalysisDataObjectList oilAnalysiss)
	        {
			    try
			    {
				return _IOilAnalysisService.UpdateOilAnalysiss(oilAnalysiss);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilAnalysisResultData CommitOilAnalysiss(OilAnalysisResultData oilAnalysisData)
	        {
			    try
			    {
				return _IOilAnalysisService.CommitOilAnalysiss(oilAnalysisData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilAnalysisDataObject GetFullOilAnalysisByID(Int32 id)
	        {
			    try
			    {
				return _IOilAnalysisService.GetFullOilAnalysisByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public OilAnalysisDataObjectList GetFullOilAnalysiss()
	        {
			    try
			    {
				return _IOilAnalysisService.GetFullOilAnalysiss();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public void OilAnalysisOntime()
	        {
			    try
			    {
				 _IOilAnalysisService.OilAnalysisOntime();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorDataObjectList CreatePartsMonitors(PartsMonitorDataObjectList partsMonitors)
	        {
			    try
			    {
				return _IPartsMonitorService.CreatePartsMonitors(partsMonitors);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeletePartsMonitors(IDList partsMonitorIDs)
	        {
			    try
			    {
				return _IPartsMonitorService.DeletePartsMonitors(partsMonitorIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorDataObjectList UpdatePartsMonitors(PartsMonitorDataObjectList partsMonitors)
	        {
			    try
			    {
				return _IPartsMonitorService.UpdatePartsMonitors(partsMonitors);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorResultData CommitPartsMonitors(PartsMonitorResultData partsMonitorData)
	        {
			    try
			    {
				return _IPartsMonitorService.CommitPartsMonitors(partsMonitorData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorDataObject GetFullPartsMonitorByID(Int32 id)
	        {
			    try
			    {
				return _IPartsMonitorService.GetFullPartsMonitorByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorDataObjectList GetFullPartsMonitors()
	        {
			    try
			    {
				return _IPartsMonitorService.GetFullPartsMonitors();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorDataObjectList CalculateAllCcpMain()
	        {
			    try
			    {
				return _IPartsMonitorService.CalculateAllCcpMain();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorDataObjectList CalculateSpecificCcpMain(String itemno)
	        {
			    try
			    {
				return _IPartsMonitorService.CalculateSpecificCcpMain(itemno);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorDataObjectList CalculateSpecificSnregs(List<SnReg> sns)
	        {
			    try
			    {
				return _IPartsMonitorService.CalculateSpecificSnregs(sns);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorDataObjectList GetPartsMonitors(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IPartsMonitorQuery.GetPartsMonitors(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorWithPagination GetPartsMonitorWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IPartsMonitorQuery.GetPartsMonitorWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PartsMonitorDataObject GetPartsMonitorByID(Int32 id)
	        {
			    try
			    {
				return _IPartsMonitorQuery.GetPartsMonitorByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PnRegDataObjectList CreatePnRegs(PnRegDataObjectList pnRegs)
	        {
			    try
			    {
				return _IPnRegService.CreatePnRegs(pnRegs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeletePnRegs(IDList pnRegIDs)
	        {
			    try
			    {
				return _IPnRegService.DeletePnRegs(pnRegIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PnRegDataObjectList UpdatePnRegs(PnRegDataObjectList pnRegs)
	        {
			    try
			    {
				return _IPnRegService.UpdatePnRegs(pnRegs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PnRegResultData CommitPnRegs(PnRegResultData pnRegData)
	        {
			    try
			    {
				return _IPnRegService.CommitPnRegs(pnRegData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PnRegDataObject GetFullPnRegByID(Int32 id)
	        {
			    try
			    {
				return _IPnRegService.GetFullPnRegByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PnRegDataObjectList GetFullPnRegs()
	        {
			    try
			    {
				return _IPnRegService.GetFullPnRegs();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PnRegDataObjectList GetPnRegs(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IPnRegQuery.GetPnRegs(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PnRegWithPagination GetPnRegWithPagination(Pagination pagination, Boolean isEngPart)
	        {
			    try
			    {
				return _IPnRegQuery.GetPnRegWithPagination(pagination, isEngPart);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PnRegDataObject GetPnRegByID(Int32 id)
	        {
			    try
			    {
				return _IPnRegQuery.GetPnRegByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PnRegDataObject GetPnRegByPn(String pn)
	        {
			    try
			    {
				return _IPnRegQuery.GetPnRegByPn(pn);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public KeyValueDataObjectList QueryPnregCol(String pn)
	        {
			    try
			    {
				return _IPnRegQuery.QueryPnregCol(pn);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public PnRegWithPagination GetEngPnOilWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IPnRegQuery.GetEngPnOilWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public ScnMainDataObjectList CreateScnMains(ScnMainDataObjectList scnMains)
	        {
			    try
			    {
				return _IScnMainService.CreateScnMains(scnMains);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteScnMains(IDList scnMainIDs)
	        {
			    try
			    {
				return _IScnMainService.DeleteScnMains(scnMainIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public ScnMainDataObjectList UpdateScnMains(ScnMainDataObjectList scnMains)
	        {
			    try
			    {
				return _IScnMainService.UpdateScnMains(scnMains);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public ScnMainResultData CommitScnMains(ScnMainResultData scnMainData)
	        {
			    try
			    {
				return _IScnMainService.CommitScnMains(scnMainData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public ScnMainDataObject GetFullScnMainByID(Int32 id)
	        {
			    try
			    {
				return _IScnMainService.GetFullScnMainByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public ScnMainDataObjectList GetFullScnMains()
	        {
			    try
			    {
				return _IScnMainService.GetFullScnMains();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public ScnMainDataObjectList GetScnMains(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IScnMainQuery.GetScnMains(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public ScnMainWithPagination GetScnMainWithPagination(Pagination pagination, String organization)
	        {
			    try
			    {
				return _IScnMainQuery.GetScnMainWithPagination(pagination, organization);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public ScnMainDataObject GetScnMainByID(Int32 id)
	        {
			    try
			    {
				return _IScnMainQuery.GetScnMainByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CompareAcOrderDtoWithPagination CompareAcOrders(String msn1, String msn2, Pagination pagination)
	        {
			    try
			    {
				return _IScnMainQuery.CompareAcOrders(msn1, msn2, pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public KeyValueDataObjectList GetAcOrderMsns()
	        {
			    try
			    {
				return _IScnMainQuery.GetAcOrderMsns();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnHistoryDataObjectList CreateSnHistorys(SnHistoryDataObjectList snHistorys)
	        {
			    try
			    {
				return _ISnHistoryService.CreateSnHistorys(snHistorys);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteSnHistorys(IDList snHistoryIDs)
	        {
			    try
			    {
				return _ISnHistoryService.DeleteSnHistorys(snHistoryIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnHistoryDataObjectList UpdateSnHistorys(SnHistoryDataObjectList snHistorys)
	        {
			    try
			    {
				return _ISnHistoryService.UpdateSnHistorys(snHistorys);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnHistoryResultData CommitSnHistorys(SnHistoryResultData snHistoryData)
	        {
			    try
			    {
				return _ISnHistoryService.CommitSnHistorys(snHistoryData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnHistoryDataObject GetFullSnHistoryByID(Int32 id)
	        {
			    try
			    {
				return _ISnHistoryService.GetFullSnHistoryByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnHistoryDataObjectList GetFullSnHistorys()
	        {
			    try
			    {
				return _ISnHistoryService.GetFullSnHistorys();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnHistoryDataObjectList GetSnHistorys(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _ISnHistoryQuery.GetSnHistorys(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnHistoryWithPagination GetSnHistoryWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _ISnHistoryQuery.GetSnHistoryWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnHistoryDataObject GetSnHistoryByID(Int32 id)
	        {
			    try
			    {
				return _ISnHistoryQuery.GetSnHistoryByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnHistoryDataObjectList QuerySnHistorys(String ac, String itemNo, String pn, DateTime fromDate, DateTime toDate)
	        {
			    try
			    {
				return _ISnHistoryQuery.QuerySnHistorys(ac, itemNo, pn, fromDate, toDate);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnHistoryDataObject GetLastSnHistoryBySnregID(Int32 id)
	        {
			    try
			    {
				return _ISnHistoryQuery.GetLastSnHistoryBySnregID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegDataObjectList CreateSnRegs(SnRegDataObjectList snRegs)
	        {
			    try
			    {
				return _ISnRegService.CreateSnRegs(snRegs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteSnRegs(IDList snRegIDs)
	        {
			    try
			    {
				return _ISnRegService.DeleteSnRegs(snRegIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegDataObjectList UpdateSnRegs(SnRegDataObjectList snRegs)
	        {
			    try
			    {
				return _ISnRegService.UpdateSnRegs(snRegs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegResultData CommitSnRegs(SnRegResultData snRegData)
	        {
			    try
			    {
				return _ISnRegService.CommitSnRegs(snRegData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegDataObject GetFullSnRegByID(Int32 id)
	        {
			    try
			    {
				return _ISnRegService.GetFullSnRegByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegDataObjectList GetFullSnRegs()
	        {
			    try
			    {
				return _ISnRegService.GetFullSnRegs();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegDataObjectList QuerySnRegs(String ac, Int32 pnRegId, String sn)
	        {
			    try
			    {
				return _ISnRegService.QuerySnRegs(ac, pnRegId, sn);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegDataObjectList QuerySnRegDtos(String itemNo, Int32 pnId, Int32 snId, String ac, String avail)
	        {
			    try
			    {
				return _ISnRegService.QuerySnRegDtos(itemNo, pnId, snId, ac, avail);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegDataObjectList GetSnRegs(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _ISnRegQuery.GetSnRegs(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegWithPagination GetSnRegWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _ISnRegQuery.GetSnRegWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegDataObject GetSnRegByID(Int32 id)
	        {
			    try
			    {
				return _ISnRegQuery.GetSnRegByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public EgtMarginDataObjectList GetSnEgtMarginByID(Int32 id)
	        {
			    try
			    {
				return _ISnRegQuery.GetSnEgtMarginByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public List<SnReg> GetSnRegsByCalculate(String[] cpns)
	        {
			    try
			    {
				return _ISnRegQuery.GetSnRegsByCalculate(cpns);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public List<SnReg> GetSnRegsByOilAnalysis(String[] pnclass)
	        {
			    try
			    {
				return _ISnRegQuery.GetSnRegsByOilAnalysis(pnclass);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnRegWithPagination GetSnRegEgtWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _ISnRegQuery.GetSnRegEgtWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public EngineReportDto QueryEngineReportDetail(Int32 id)
	        {
			    try
			    {
				return _ISnRegQuery.QueryEngineReportDetail(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public EngineReportDtoWithPagination QueryEngineReports(Pagination pagination)
	        {
			    try
			    {
				return _ISnRegQuery.QueryEngineReports(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WfHistoryDataObjectList CreateWfHistorys(WfHistoryDataObjectList wfHistorys)
	        {
			    try
			    {
				return _IWfHistoryService.CreateWfHistorys(wfHistorys);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteWfHistorys(IDList wfHistoryIDs)
	        {
			    try
			    {
				return _IWfHistoryService.DeleteWfHistorys(wfHistoryIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WfHistoryDataObjectList UpdateWfHistorys(WfHistoryDataObjectList wfHistorys)
	        {
			    try
			    {
				return _IWfHistoryService.UpdateWfHistorys(wfHistorys);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WfHistoryResultData CommitWfHistorys(WfHistoryResultData wfHistoryData)
	        {
			    try
			    {
				return _IWfHistoryService.CommitWfHistorys(wfHistoryData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WfHistoryDataObject GetFullWfHistoryByID(Int32 id)
	        {
			    try
			    {
				return _IWfHistoryService.GetFullWfHistoryByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WfHistoryDataObjectList GetFullWfHistorys()
	        {
			    try
			    {
				return _IWfHistoryService.GetFullWfHistorys();
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WfHistoryDataObjectList GetWfHistorys(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IWfHistoryQuery.GetWfHistorys(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WfHistoryWithPagination GetWfHistoryWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IWfHistoryQuery.GetWfHistoryWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WfHistoryDataObject GetWfHistoryByID(Int32 id)
	        {
			    try
			    {
				return _IWfHistoryQuery.GetWfHistoryByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WfHistoryDataObjectList GetWfHistorysByBusiness(String business, Int32 businessID)
	        {
			    try
			    {
				return _IWfHistoryQuery.GetWfHistorysByBusiness(business, businessID);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WorkScopeDataObjectList CreateWorkScopes(WorkScopeDataObjectList workScopes)
	        {
			    try
			    {
				return _IWorkScopeService.CreateWorkScopes(workScopes);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteWorkScopes(IDList workScopeIDs)
	        {
			    try
			    {
				return _IWorkScopeService.DeleteWorkScopes(workScopeIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WorkScopeDataObjectList UpdateWorkScopes(WorkScopeDataObjectList workScopes)
	        {
			    try
			    {
				return _IWorkScopeService.UpdateWorkScopes(workScopes);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WorkScopeResultData CommitWorkScopes(WorkScopeResultData workScopeData)
	        {
			    try
			    {
				return _IWorkScopeService.CommitWorkScopes(workScopeData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WorkScopeDataObjectList GetWorkScopes(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IWorkScopeQuery.GetWorkScopes(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WorkScopeWithPagination GetWorkScopeWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IWorkScopeQuery.GetWorkScopeWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public WorkScopeDataObject GetWorkScopeByID(Int32 id)
	        {
			    try
			    {
				return _IWorkScopeQuery.GetWorkScopeByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public EgtMarginDataObjectList CreateEgtMargins(EgtMarginDataObjectList egtMargins)
	        {
			    try
			    {
				return _IEgtMarginService.CreateEgtMargins(egtMargins);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteEgtMargins(IDList egtMarginIDs)
	        {
			    try
			    {
				return _IEgtMarginService.DeleteEgtMargins(egtMarginIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public EgtMarginDataObjectList UpdateEgtMargins(EgtMarginDataObjectList egtMargins)
	        {
			    try
			    {
				return _IEgtMarginService.UpdateEgtMargins(egtMargins);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public EgtMarginResultData CommitEgtMargins(EgtMarginResultData egtMarginData)
	        {
			    try
			    {
				return _IEgtMarginService.CommitEgtMargins(egtMarginData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public EgtMarginDataObjectList GetEgtMargins(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IEgtMarginQuery.GetEgtMargins(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public EgtMarginWithPagination GetEgtMarginWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IEgtMarginQuery.GetEgtMarginWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public EgtMarginDataObject GetEgtMarginByID(Int32 id)
	        {
			    try
			    {
				return _IEgtMarginQuery.GetEgtMarginByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public SnReg GetSnRegBySn(String sn)
	        {
			    try
			    {
				return _IEgtMarginQuery.GetSnRegBySn(sn);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public Boolean SaveSnregEgts(SnRegDataObjectList snregs)
	        {
			    try
			    {
				return _IEgtMarginQuery.SaveSnregEgts(snregs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public Boolean SaveImportEgts(SnRegDataObjectList snregs)
	        {
			    try
			    {
				return _IEgtMarginQuery.SaveImportEgts(snregs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public MajorEventDataObjectList CreateMajorEvents(MajorEventDataObjectList majorEvents)
	        {
			    try
			    {
				return _IMajorEventService.CreateMajorEvents(majorEvents);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteMajorEvents(IDList majorEventIDs)
	        {
			    try
			    {
				return _IMajorEventService.DeleteMajorEvents(majorEventIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public MajorEventDataObjectList UpdateMajorEvents(MajorEventDataObjectList majorEvents)
	        {
			    try
			    {
				return _IMajorEventService.UpdateMajorEvents(majorEvents);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public MajorEventResultData CommitMajorEvents(MajorEventResultData majorEventData)
	        {
			    try
			    {
				return _IMajorEventService.CommitMajorEvents(majorEventData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public MajorEventDataObjectList GetMajorEvents(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IMajorEventQuery.GetMajorEvents(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public MajorEventWithPagination GetMajorEventWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IMajorEventQuery.GetMajorEventWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public MajorEventDataObject GetMajorEventByID(Int32 id)
	        {
			    try
			    {
				return _IMajorEventQuery.GetMajorEventByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AttactDocumentDataObjectList CreateAttactDocuments(AttactDocumentDataObjectList attactDocuments)
	        {
			    try
			    {
				return _IAttactDocumentService.CreateAttactDocuments(attactDocuments);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteAttactDocuments(IDList attactDocumentIDs)
	        {
			    try
			    {
				return _IAttactDocumentService.DeleteAttactDocuments(attactDocumentIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AttactDocumentDataObjectList UpdateAttactDocuments(AttactDocumentDataObjectList attactDocuments)
	        {
			    try
			    {
				return _IAttactDocumentService.UpdateAttactDocuments(attactDocuments);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AttactDocumentResultData CommitAttactDocuments(AttactDocumentResultData attactDocumentData)
	        {
			    try
			    {
				return _IAttactDocumentService.CommitAttactDocuments(attactDocumentData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AttactDocumentDataObjectList GetAttactDocuments(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IAttactDocumentQuery.GetAttactDocuments(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AttactDocumentWithPagination GetAttactDocumentWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IAttactDocumentQuery.GetAttactDocumentWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AttactDocumentDataObject GetAttactDocumentByID(Int32 id)
	        {
			    try
			    {
				return _IAttactDocumentQuery.GetAttactDocumentByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AttactDocumentDataObjectList GetBusinessAttactDocuments(Int32 businessId, String business)
	        {
			    try
			    {
				return _IAttactDocumentQuery.GetBusinessAttactDocuments(businessId, business);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcIntUnitUtilizaDataObjectList CreateAcIntUnitUtilizas(AcIntUnitUtilizaDataObjectList acIntUnitUtilizas)
	        {
			    try
			    {
				return _IAcIntUnitUtilizaService.CreateAcIntUnitUtilizas(acIntUnitUtilizas);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteAcIntUnitUtilizas(IDList acIntUnitUtilizaIDs)
	        {
			    try
			    {
				return _IAcIntUnitUtilizaService.DeleteAcIntUnitUtilizas(acIntUnitUtilizaIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcIntUnitUtilizaDataObjectList UpdateAcIntUnitUtilizas(AcIntUnitUtilizaDataObjectList acIntUnitUtilizas)
	        {
			    try
			    {
				return _IAcIntUnitUtilizaService.UpdateAcIntUnitUtilizas(acIntUnitUtilizas);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcIntUnitUtilizaResultData CommitAcIntUnitUtilizas(AcIntUnitUtilizaResultData acIntUnitUtilizaData)
	        {
			    try
			    {
				return _IAcIntUnitUtilizaService.CommitAcIntUnitUtilizas(acIntUnitUtilizaData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcIntUnitUtilizaDataObjectList GetAcIntUnitUtilizas(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IAcIntUnitUtilizaQuery.GetAcIntUnitUtilizas(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcIntUnitUtilizaWithPagination GetAcIntUnitUtilizaWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IAcIntUnitUtilizaQuery.GetAcIntUnitUtilizaWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcIntUnitUtilizaDataObject GetAcIntUnitUtilizaByID(Int32 id)
	        {
			    try
			    {
				return _IAcIntUnitUtilizaQuery.GetAcIntUnitUtilizaByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AirBusMSCNDataObjectList CreateAirBusMSCNs(AirBusMSCNDataObjectList airBusMSCNs)
	        {
			    try
			    {
				return _IAirBusMSCNService.CreateAirBusMSCNs(airBusMSCNs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteAirBusMSCNs(IDList airBusMSCNIDs)
	        {
			    try
			    {
				return _IAirBusMSCNService.DeleteAirBusMSCNs(airBusMSCNIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AirBusMSCNDataObjectList UpdateAirBusMSCNs(AirBusMSCNDataObjectList airBusMSCNs)
	        {
			    try
			    {
				return _IAirBusMSCNService.UpdateAirBusMSCNs(airBusMSCNs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AirBusMSCNResultData CommitAirBusMSCNs(AirBusMSCNResultData airBusMSCNData)
	        {
			    try
			    {
				return _IAirBusMSCNService.CommitAirBusMSCNs(airBusMSCNData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AirBusMSCNDataObjectList GetAirBusMSCNs(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IAirBusMSCNQuery.GetAirBusMSCNs(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AirBusMSCNWithPagination GetAirBusMSCNWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IAirBusMSCNQuery.GetAirBusMSCNWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AirBusMSCNDataObject GetAirBusMSCNByID(Int32 id)
	        {
			    try
			    {
				return _IAirBusMSCNQuery.GetAirBusMSCNByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public CompareMscnDtoList CompareMscn(String fleet, String importType, AirBusMSCNDataObjectList airBus)
	        {
			    try
			    {
				return _IAirBusMSCNQuery.CompareMscn(fleet, importType, airBus);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbComplyDataObjectList CreateAdsbComplys(AdsbComplyDataObjectList adsbComplys)
	        {
			    try
			    {
				return _IAdsbComplyService.CreateAdsbComplys(adsbComplys);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteAdsbComplys(IDList adsbComplyIDs)
	        {
			    try
			    {
				return _IAdsbComplyService.DeleteAdsbComplys(adsbComplyIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbComplyDataObjectList UpdateAdsbComplys(AdsbComplyDataObjectList adsbComplys)
	        {
			    try
			    {
				return _IAdsbComplyService.UpdateAdsbComplys(adsbComplys);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbComplyResultData CommitAdsbComplys(AdsbComplyResultData adsbComplyData)
	        {
			    try
			    {
				return _IAdsbComplyService.CommitAdsbComplys(adsbComplyData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbComplyDataObjectList GetAdsbComplys(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IAdsbComplyQuery.GetAdsbComplys(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbComplyWithPagination GetAdsbComplyWithPagination(Nullable<Boolean> isAD, Pagination pagination)
	        {
			    try
			    {
				return _IAdsbComplyQuery.GetAdsbComplyWithPagination(isAD, pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbComplyDataObject GetAdsbComplyByID(Int32 id)
	        {
			    try
			    {
				return _IAdsbComplyQuery.GetAdsbComplyByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbDataObjectList GetAdsbs(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IAdsbQuery.GetAdsbs(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbWithPagination GetAdsbWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IAdsbQuery.GetAdsbWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbDataObject GetAdsbByID(Int32 id)
	        {
			    try
			    {
				return _IAdsbQuery.GetAdsbByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbDataObjectList CreateAdsbs(AdsbDataObjectList adsbs)
	        {
			    try
			    {
				return _IAdsbService.CreateAdsbs(adsbs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteAdsbs(IDList adsbIDs)
	        {
			    try
			    {
				return _IAdsbService.DeleteAdsbs(adsbIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbDataObjectList UpdateAdsbs(AdsbDataObjectList adsbs)
	        {
			    try
			    {
				return _IAdsbService.UpdateAdsbs(adsbs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AdsbResultData CommitAdsbs(AdsbResultData adsbData)
	        {
			    try
			    {
				return _IAdsbService.CommitAdsbs(adsbData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcStructureDataObjectList GetAcStructures(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
	        {
			    try
			    {
				return _IAcStructureQuery.GetAcStructures(colFilter, sortFilter);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcStructureWithPagination GetAcStructureWithPagination(Pagination pagination)
	        {
			    try
			    {
				return _IAcStructureQuery.GetAcStructureWithPagination(pagination);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcStructureDataObject GetAcStructureByID(Int32 id)
	        {
			    try
			    {
				return _IAcStructureQuery.GetAcStructureByID(id);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcStructureDataObjectList CreateAcStructures(AcStructureDataObjectList acStructures)
	        {
			    try
			    {
				return _IAcStructureService.CreateAcStructures(acStructures);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public IDList DeleteAcStructures(IDList acStructureIDs)
	        {
			    try
			    {
				return _IAcStructureService.DeleteAcStructures(acStructureIDs);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcStructureDataObjectList UpdateAcStructures(AcStructureDataObjectList acStructures)
	        {
			    try
			    {
				return _IAcStructureService.UpdateAcStructures(acStructures);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		    public AcStructureResultData CommitAcStructures(AcStructureResultData acStructureData)
	        {
			    try
			    {
				return _IAcStructureService.CommitAcStructures(acStructureData);
		     	}
			   catch(Exception ex)
			   {
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			   }
		    }
		}
}


