<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ assembly name="System.ServiceModel.dll"#>
<#@ assembly name="System.Runtime.Serialization.dll"#>
<#@ Assembly Name="$(SolutionDir)Packages\UniCloud.Infrastructure.1.0.1\lib\UniCloud.Infrastructure.dll" #>
<#@ Assembly Name="$(SolutionDir)UniCloud.Component.Server\Application\UniCloud.Application.Component\bin\$(ConfigurationName)\UniCloud.Application.Component.dll" #>
<#@ Assembly Name="$(SolutionDir)UniCloud.Component.Server\Domain\UniCloud.Domain.Component\bin\$(ConfigurationName)\UniCloud.Domain.Component.dll" #>
<#@ Assembly Name="$(SolutionDir)UniCloud.Component.Server\Application\UniCloud.ServiceContracts.Component\bin\$(ConfigurationName)\UniCloud.ServiceContracts.Component.dll" #>
<#@ Assembly Name="$(SolutionDir)UniCloud.Component.Server\Application\UniCloud.Query.Component\bin\$(ConfigurationName)\UniCloud.Query.Component.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="UniCloud.Application" #>
<#@ import namespace="System.ServiceModel"#>
<#@ include file="Common.tt"#>
// ******************************************************
// DO NOT CHANGE THE CONTENT OF THIS FILE
// This file was generated by the T4 engine and the 
// contents of this source code will be changed after
// the custom tool was run.
// ******************************************************
using System;
using UniCloud.DataObjects.Silverlight;
using UniCloud.Services.Client.Component;

namespace UniCloud.Services
{
    /// <summary>
    /// 附件管理接口
    /// </summary>
    public interface IPartClient : IDisposable 
    {
	    
        <#
		foreach (Type tp in typeof(UniCloud.ServiceContracts.IPartService).GetInterfaces())
          {
		 foreach (MethodInfo method in tp.GetMethods().Where(m => m.CustomAttributes.Any(a => a.AttributeType == typeof(System.ServiceModel.OperationContractAttribute))))  {#>
 void <#=method.Name#>(<#=GetMethodParameterList(method).Length>0?GetMethodParameterList(method)+",":""#>
		 EventHandler<<#=method.Name#>CompletedEventArgs> callback,object state = null);

		<#}
         }
		#>
	}
}