 

// ******************************************************
// DO NOT CHANGE THE CONTENT OF THIS FILE
// This file was generated by the T4 engine and the 
// contents of this source code will be changed after
// the custom tool was run.
// ******************************************************
using System;
using System.Collections.Generic;
using System.ServiceModel;
using UniCloud.Application;
using UniCloud.DataObjects;
using UniCloud.ServiceContracts;
using UniCloud.Infrastructure;
using UniCloud.Query.AcConfiguration;

namespace UniCloud.Services
{
	public class AircraftService : IAircraftService
	{
		#region 服务接口
	    private readonly IAcCategoryService _acCategoryServiceImpl = ServiceLocator.Instance.GetService<IAcCategoryService>();
		private readonly IAcRegService _acRegServiceImpl = ServiceLocator.Instance.GetService<IAcRegService>();
		private readonly IAcTypeService _acTypeServicempl = ServiceLocator.Instance.GetService<IAcTypeService>();
		private readonly IAtaService _ataServiceImpl = ServiceLocator.Instance.GetService<IAtaService>();
		private readonly ILicenseTypeService _licenseTypeServiceImpl = ServiceLocator.Instance.GetService<ILicenseTypeService>();

		private readonly IAcTypeQuery _acTypeQuery = ServiceLocator.Instance.GetService<IAcTypeQuery>();
		private readonly IAcCategoryQuery _acCategoryQuery = ServiceLocator.Instance.GetService<IAcCategoryQuery>();
		private readonly IAcRegQuery _acRegQuery = ServiceLocator.Instance.GetService<IAcRegQuery>();
		private readonly IAtaQuery _ataQuery = ServiceLocator.Instance.GetService<IAtaQuery>();
		private readonly ILicenseTypeQuery _licenseTypeQuery = ServiceLocator.Instance.GetService<ILicenseTypeQuery>();
		#endregion


		#region IAcRegService
		
		public AcRegDataObjectList CreateAcRegs(AcRegDataObjectList acRegs)
		{
			try
			{
				return _acRegServiceImpl.CreateAcRegs(acRegs);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public IDList DeleteAcRegs(AcRegDataObjectList acRegs)
		{
			try
			{
				return _acRegServiceImpl.DeleteAcRegs(acRegs);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcRegDataObjectList UpdateAcRegs(AcRegDataObjectList acRegs)
		{
			try
			{
				return _acRegServiceImpl.UpdateAcRegs(acRegs);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcRegResultData CommitAcRegs(AcRegResultData acRegData)
		{
			try
			{
				return _acRegServiceImpl.CommitAcRegs(acRegData);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcRegDataObject GetFullAcRegByID(Int32 id)
		{
			try
			{
				return _acRegServiceImpl.GetFullAcRegByID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcRegDataObject GetFullAcRegByGuid(String id)
		{
			try
			{
				return _acRegServiceImpl.GetFullAcRegByGuid(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcRegDataObject GetFullAcRegByReg(String reg)
		{
			try
			{
				return _acRegServiceImpl.GetFullAcRegByReg(reg);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcRegDataObjectList GetFullAcRegs()
		{
			try
			{
				return _acRegServiceImpl.GetFullAcRegs();
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}
        #endregion

	    #region IAcRegQuery
		
		public AcRegDataObjectList GetAcRegs(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _acRegQuery.GetAcRegs(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcRegWithPagination GetAcRegWithPagination(Pagination pagination)
		{
			try
			{
				return _acRegQuery.GetAcRegWithPagination(pagination);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcRegDataObject GetAcRegByID(Int32 id)
		{
			try
			{
				return _acRegQuery.GetAcRegByID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcRegDataObject GetAcRegByGuid(String id)
		{
			try
			{
				return _acRegQuery.GetAcRegByGuid(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcregLicenseDataObjectList GetAcregLicenseByAcregID(Int32 id)
		{
			try
			{
				return _acRegQuery.GetAcregLicenseByAcregID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public KeyValueDataObjectList GetAcRegCol(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _acRegQuery.GetAcRegCol(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}
		#endregion

		 #region IAcTypeService
		
		public AcTypeDataObjectList CreateAcTypes(AcTypeDataObjectList acTypes)
		{
			try
			{
				return _acTypeServicempl.CreateAcTypes(acTypes);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public Boolean DeleteAcTypes(IDList acTypeIDs)
		{
			try
			{
				return _acTypeServicempl.DeleteAcTypes(acTypeIDs);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcTypeDataObjectList UpdateAcTypes(AcTypeDataObjectList acTypes)
		{
			try
			{
				return _acTypeServicempl.UpdateAcTypes(acTypes);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcTypeResultData CommitAcTypes(AcTypeResultData acTypeData)
		{
			try
			{
				return _acTypeServicempl.CommitAcTypes(acTypeData);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcTypeDataObject GetFullAcTypeByID(Int32 id)
		{
			try
			{
				return _acTypeServicempl.GetFullAcTypeByID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcTypeDataObject GetFullAcTypeByGuid(String id)
		{
			try
			{
				return _acTypeServicempl.GetFullAcTypeByGuid(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcTypeDataObjectList GetFullAcTypes()
		{
			try
			{
				return _acTypeServicempl.GetFullAcTypes();
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcTypeDataObjectList ManageAcTypeAta(AcTypeDataObjectList actypes)
		{
			try
			{
				return _acTypeServicempl.ManageAcTypeAta(actypes);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcModelDataObjectList CreateAcModels(Int32 acTypeId, AcModelDataObjectList acModels)
		{
			try
			{
				return _acTypeServicempl.CreateAcModels(acTypeId, acModels);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcModelDataObjectList UpdateAcModels(Int32 acTypeId, AcModelDataObjectList acModels)
		{
			try
			{
				return _acTypeServicempl.UpdateAcModels(acTypeId, acModels);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcConfigDataObjectList CreateAcConfigs(Int32 acTypeId, Int32 acModelId, AcConfigDataObjectList acConfigs)
		{
			try
			{
				return _acTypeServicempl.CreateAcConfigs(acTypeId, acModelId, acConfigs);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcConfigDataObjectList UpdateAcConfigs(Int32 acTypeId, Int32 acModelId, AcConfigDataObjectList acConfigs)
		{
			try
			{
				return _acTypeServicempl.UpdateAcConfigs(acTypeId, acModelId, acConfigs);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public Boolean DeleteAcModels(Int32 acTypeId, AcModelDataObjectList acModels)
		{
			try
			{
				return _acTypeServicempl.DeleteAcModels(acTypeId, acModels);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public Boolean DeleteAcConfigs(Int32 acTypeId, Int32 acModelId, AcConfigDataObjectList acConfigs)
		{
			try
			{
				return _acTypeServicempl.DeleteAcConfigs(acTypeId, acModelId, acConfigs);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}
        #endregion

		#region IAcTypeQuery
		
		public AcTypeDataObjectList GetAcTypes(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _acTypeQuery.GetAcTypes(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcTypeWithPagination GetAcTypeWithPagination(Pagination pagination)
		{
			try
			{
				return _acTypeQuery.GetAcTypeWithPagination(pagination);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcTypeDataObject GetAcTypeByID(Int32 id)
		{
			try
			{
				return _acTypeQuery.GetAcTypeByID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcTypeDataObject GetAcTypeByGuid(String id)
		{
			try
			{
				return _acTypeQuery.GetAcTypeByGuid(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcModelDataObjectList GetAcModels(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _acTypeQuery.GetAcModels(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcModelDataObject GetAcModelByID(Int32 Id)
		{
			try
			{
				return _acTypeQuery.GetAcModelByID(Id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcModelDataObject GetAcModelByGuid(String Id)
		{
			try
			{
				return _acTypeQuery.GetAcModelByGuid(Id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcConfigDataObjectList GetAcConfigs(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _acTypeQuery.GetAcConfigs(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcConfigDataObject GetAcConfigByID(Int32 Id)
		{
			try
			{
				return _acTypeQuery.GetAcConfigByID(Id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcConfigDataObject GetAcConfigByGuid(String Id)
		{
			try
			{
				return _acTypeQuery.GetAcConfigByGuid(Id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public KeyValueDataObjectList GetAcTypeCol(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _acTypeQuery.GetAcTypeCol(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public KeyValueDataObjectList GetAcConfigCol(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _acTypeQuery.GetAcConfigCol(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public KeyValueDataObjectList GetAcModelCol(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _acTypeQuery.GetAcModelCol(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}
		#endregion

		 #region IAtaService
		
		public AtaDataObjectList CreateAtas(AtaDataObjectList atas)
		{
			try
			{
				return _ataServiceImpl.CreateAtas(atas);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public IDList DeleteAtas(IDList ataIDs)
		{
			try
			{
				return _ataServiceImpl.DeleteAtas(ataIDs);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AtaDataObjectList UpdateAtas(AtaDataObjectList atas)
		{
			try
			{
				return _ataServiceImpl.UpdateAtas(atas);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AtaResultData CommitAtas(AtaResultData ataData)
		{
			try
			{
				return _ataServiceImpl.CommitAtas(ataData);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AtaDataObject GetFullAtaByID(Int32 id)
		{
			try
			{
				return _ataServiceImpl.GetFullAtaByID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AtaDataObjectList GetFullAtas()
		{
			try
			{
				return _ataServiceImpl.GetFullAtas();
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}
        #endregion

		#region IAtaQuery
		
		public AtaDataObjectList GetAtas(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _ataQuery.GetAtas(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AtaWithPagination GetAtaWithPagination(Pagination pagination)
		{
			try
			{
				return _ataQuery.GetAtaWithPagination(pagination);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AtaDataObject GetAtaByID(Int32 id)
		{
			try
			{
				return _ataQuery.GetAtaByID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AtaDataObject GetAtaByGuid(String id)
		{
			try
			{
				return _ataQuery.GetAtaByGuid(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public KeyValueDataObjectList GetAtaCol(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _ataQuery.GetAtaCol(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}
		#endregion

	    #region ILicenseTypeService
		
		public LicenseTypeDataObjectList CreateLicenseTypes(LicenseTypeDataObjectList licenseTypes)
		{
			try
			{
				return _licenseTypeServiceImpl.CreateLicenseTypes(licenseTypes);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public IDList DeleteLicenseTypes(IDList licenseTypeIDs)
		{
			try
			{
				return _licenseTypeServiceImpl.DeleteLicenseTypes(licenseTypeIDs);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public LicenseTypeDataObjectList UpdateLicenseTypes(LicenseTypeDataObjectList licenseTypes)
		{
			try
			{
				return _licenseTypeServiceImpl.UpdateLicenseTypes(licenseTypes);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public LicenseTypeResultData CommitLicenseTypes(LicenseTypeResultData licenseTypeData)
		{
			try
			{
				return _licenseTypeServiceImpl.CommitLicenseTypes(licenseTypeData);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public LicenseTypeDataObject GetFullLicenseTypeByID(Int32 id)
		{
			try
			{
				return _licenseTypeServiceImpl.GetFullLicenseTypeByID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public LicenseTypeDataObjectList GetFullLicenseTypes()
		{
			try
			{
				return _licenseTypeServiceImpl.GetFullLicenseTypes();
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}
         #endregion

		 #region ILicenseTypeQuery
		
		public LicenseTypeDataObjectList GetLicenseTypes(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _licenseTypeQuery.GetLicenseTypes(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public LicenseTypeWithPagination GetLicenseTypeWithPagination(Pagination pagination)
		{
			try
			{
				return _licenseTypeQuery.GetLicenseTypeWithPagination(pagination);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public LicenseTypeDataObject GetLicenseTypeByID(Int32 id)
		{
			try
			{
				return _licenseTypeQuery.GetLicenseTypeByID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public KeyValueDataObjectList GetLicenseTypeCol(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _licenseTypeQuery.GetLicenseTypeCol(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}
		#endregion

		#region IAcCategoryService
		
		public AcCategoryDataObjectList CreateAcCategorys(AcCategoryDataObjectList acCategorys)
		{
			try
			{
				return _acCategoryServiceImpl.CreateAcCategorys(acCategorys);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public IDList DeleteAcCategorys(IDList acCategoryIDs)
		{
			try
			{
				return _acCategoryServiceImpl.DeleteAcCategorys(acCategoryIDs);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcCategoryDataObjectList UpdateAcCategorys(AcCategoryDataObjectList acCategorys)
		{
			try
			{
				return _acCategoryServiceImpl.UpdateAcCategorys(acCategorys);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcCategoryResultData CommitAcCategorys(AcCategoryResultData acCategoryData)
		{
			try
			{
				return _acCategoryServiceImpl.CommitAcCategorys(acCategoryData);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcCategoryDataObject GetFullAcCategoryByID(Int32 id)
		{
			try
			{
				return _acCategoryServiceImpl.GetFullAcCategoryByID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcCategoryDataObjectList GetFullAcCategorys()
		{
			try
			{
				return _acCategoryServiceImpl.GetFullAcCategorys();
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}
        #endregion

		 #region IAcCategoryQuery
		
		public AcCategoryDataObjectList GetAcCategorys(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _acCategoryQuery.GetAcCategorys(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcCategoryWithPagination GetAcCategoryWithPagination(Pagination pagination)
		{
			try
			{
				return _acCategoryQuery.GetAcCategoryWithPagination(pagination);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public AcCategoryDataObject GetAcCategoryByID(Int32 id)
		{
			try
			{
				return _acCategoryQuery.GetAcCategoryByID(id);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}

		public KeyValueDataObjectList GetAcCategoryCol(ColumnFilterDescriptorCollection colFilter, ColumnSortDescriptorCollection sortFilter)
		{
			try
			{
				return _acCategoryQuery.GetAcCategoryCol(colFilter, sortFilter);
			}
			catch(Exception ex)
			{
				throw new FaultException<FaultData>(FaultData.CreateFromException(ex), FaultData.CreateFaultReason(ex));
			}
		}
		#endregion
	}
}


