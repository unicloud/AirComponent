<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral" />
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <connectionStrings>
    <add name="AcConfiguration" providerName="Oracle.DataAccess.Client" connectionString="Data Source=UNICLOUD;User id=UC_AMD;Password=DB005F6CBCF798D6" />
    <add name="AcConfigurationSql" providerName="System.Data.SqlClient" connectionString="Server=.;Database=UniCloud.Component;Persist Security Info=True;User ID=UniCloud;Password=26344DB3960DD7C73A93F6EDFA95BEC0;Pooling=true;Max Pool Size=200;Min Pool Size=0" />
  </connectionStrings>
  <appSettings>
    <add key="DatabaseType" value="SqlServer" />
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <container>
      <extension type="Interception" />
      <!--Cache Provider-->
      <register type="UniCloud.Infrastructure.Caching.ICacheProvider, UniCloud.Infrastructure" mapTo="UniCloud.Infrastructure.Caching.EntLibCacheProvider, UniCloud.Infrastructure.Caching" />
      <!--Repository Context & Repositories-->
      <register type="UniCloud.Domain.Repositories.IRepositoryContext, UniCloud.Domain" mapTo="UniCloud.Domain.Repositories.EntityFramework.EntityFrameworkRepositoryAcConfigDbContext, UniCloud.Domain.Repositories.AcConfiguration">
        <lifetime type="UniCloud.Infrastructure.WcfPerRequestLifetimeManager, UniCloud.Infrastructure" />
      </register>
      <register type="UniCloud.Domain.Repositories.EntityFramework.IUniCloudDbContext,   UniCloud.Domain.Repositories" mapTo="UniCloud.Domain.Repositories.EntityFramework.AcConfigurationDbContext, UniCloud.Domain.Repositories.AcConfiguration"/>
      <register type="UniCloud.Domain.Repositories.IAcRegRepository, UniCloud.Domain.AcConfiguration" mapTo="UniCloud.Domain.Repositories.Repositories.AcRegRepository, UniCloud.Domain.Repositories.AcConfiguration" />
      <register type="UniCloud.Domain.Repositories.IAcTypeRepository, UniCloud.Domain.AcConfiguration" mapTo="UniCloud.Domain.Repositories.Repositories.AcTypeRepository, UniCloud.Domain.Repositories.AcConfiguration" />
      <register type="UniCloud.Domain.Repositories.IAcCategoryRepository, UniCloud.Domain.AcConfiguration" mapTo="UniCloud.Domain.Repositories.Repositories.AcCategoryRepository, UniCloud.Domain.Repositories.AcConfiguration" />
      <register type="UniCloud.Domain.Repositories.IAtaRepository, UniCloud.Domain.AcConfiguration" mapTo="UniCloud.Domain.Repositories.Repositories.AtaRepository, UniCloud.Domain.Repositories.AcConfiguration" />
      <register type="UniCloud.Domain.Repositories.ILicenseTypeRepository, UniCloud.Domain.AcConfiguration" mapTo="UniCloud.Domain.Repositories.Repositories.LicenseTypeRepository, UniCloud.Domain.Repositories.AcConfiguration" />
      <!--Domain Services-->
      <register type="UniCloud.Domain.Services.IDomainService, UniCloud.Domain.AcConfiguration" mapTo="UniCloud.Domain.Services.DomainService, UniCloud.Domain.AcConfiguration" />
      <!--Application Service Implementations-->
      <!--Aircraft-->
      <register type="UniCloud.ServiceContracts.IAcCategoryService, UniCloud.ServiceContracts.AcConfiguration" mapTo="UniCloud.Application.Implementation.AcCategoryServiceImpl, UniCloud.Application.AcConfiguration">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="UniCloud.Infrastructure.InterceptionBehaviors.CachingBehavior, UniCloud.Infrastructure" />
        <interceptionBehavior type="UniCloud.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, UniCloud.Infrastructure" />
      </register>
      <register type="UniCloud.ServiceContracts.IAcRegService, UniCloud.ServiceContracts.AcConfiguration" mapTo="UniCloud.Application.Implementation.AcRegServiceImpl, UniCloud.Application.AcConfiguration">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="UniCloud.Infrastructure.InterceptionBehaviors.CachingBehavior, UniCloud.Infrastructure" />
        <interceptionBehavior type="UniCloud.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, UniCloud.Infrastructure" />
      </register>
      <register type="UniCloud.ServiceContracts.IAcTypeService, UniCloud.ServiceContracts.AcConfiguration" mapTo="UniCloud.Application.Implementation.AcTypeServiceImpl, UniCloud.Application.AcConfiguration">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="UniCloud.Infrastructure.InterceptionBehaviors.CachingBehavior, UniCloud.Infrastructure" />
        <interceptionBehavior type="UniCloud.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, UniCloud.Infrastructure" />
      </register>
      <register type="UniCloud.ServiceContracts.IAtaService, UniCloud.ServiceContracts.AcConfiguration" mapTo="UniCloud.Application.Implementation.AtaServiceImpl, UniCloud.Application.AcConfiguration">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="UniCloud.Infrastructure.InterceptionBehaviors.CachingBehavior, UniCloud.Infrastructure" />
        <interceptionBehavior type="UniCloud.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, UniCloud.Infrastructure" />
      </register>
      <register type="UniCloud.ServiceContracts.ILicenseTypeService, UniCloud.ServiceContracts.AcConfiguration" mapTo="UniCloud.Application.Implementation.LicenseTypeServiceImpl, UniCloud.Application.AcConfiguration">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="UniCloud.Infrastructure.InterceptionBehaviors.CachingBehavior, UniCloud.Infrastructure" />
        <interceptionBehavior type="UniCloud.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, UniCloud.Infrastructure" />
      </register>
      
      <!--Query -->
      <register type="UniCloud.Query.AcConfiguration.IAcCategoryQuery, UniCloud.Query.AcConfiguration" mapTo="UniCloud.Query.AcConfiguration.AcCategoryQuery, UniCloud.Query.AcConfiguration"/>
      <register type="UniCloud.Query.AcConfiguration.IAcRegQuery, UniCloud.Query.AcConfiguration" mapTo="UniCloud.Query.AcConfiguration.AcRegQuery, UniCloud.Query.AcConfiguration"/>
      <register type="UniCloud.Query.AcConfiguration.IAcTypeQuery, UniCloud.Query.AcConfiguration" mapTo="UniCloud.Query.AcConfiguration.AcTypeQuery, UniCloud.Query.AcConfiguration"/>
      <register type="UniCloud.Query.AcConfiguration.IAtaQuery, UniCloud.Query.AcConfiguration" mapTo="UniCloud.Query.AcConfiguration.AtaQuery, UniCloud.Query.AcConfiguration"/>
      <register type="UniCloud.Query.AcConfiguration.ILicenseTypeQuery, UniCloud.Query.AcConfiguration" mapTo="UniCloud.Query.AcConfiguration.LicenseTypeQuery, UniCloud.Query.AcConfiguration"/>
      
      <!--Begin Event Handlers-->
      <!--<register type="UniCloud.Events.Handlers.IEventHandler`1[[UniCloud.Domain.Events.ParaDelEvent, UniCloud.Domain.Airplane]], UniCloud.Events"
                    mapTo="UniCloud.Events.Handlers.SendEmailHandler, UniCloud.Events.Handlers.Airplane"
                    name="ParaDelEventSendEmailHandler"/>-->
      <!--End Event Handlers-->
      <!--Begin Event Dispatchers-->
      <!--<register type="UniCloud.Events.Bus.IEventDispatcher, UniCloud.Events"
                    mapTo="UniCloud.Events.Bus.EventDispatcher`1[[UniCloud.Domain.Events.ParaDelEvent, UniCloud.Domain.Airplane]], UniCloud.Events"
                    name="TParaDelEventDispatcher">
        <constructor>
          <param name="dispatchMode">
            <value value="Parallel" />
          </param>
          <param name="enabled">
            <value value="true"/>
          </param>
          <param name="eventHandlers">
            <array>
              <dependency name="ParaDelEventSendEmailHandler"/>
            </array>
          </param>
        </constructor>
      </register>-->
      <!--End Event Dispatchers-->
      <!--Event Bus-->
      <register type="UniCloud.Events.Bus.IBus, UniCloud.Events" mapTo="UniCloud.Events.Bus.EventDispatcherBus, UniCloud.Events">
        <constructor>
          <param name="eventDispatchers">
            <array></array>
          </param>
        </constructor>
      </register>
    </container>
  </unity>
  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Logs\balog.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="100KB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%newline%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <logger name="UniCloud.Logger">
      <level value="ERROR" />
      <level value="INFO" />
      <appender-ref ref="RollingFileAppender" />
    </logger>
  </log4net>
  <cachingConfiguration defaultCacheManager="UniCloudCacheManager">
    <cacheManagers>
      <add name="UniCloudCacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="600" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
    </cacheManagers>
    <backingStores>
      <add type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="NullBackingStore" />
    </backingStores>
  </cachingConfiguration>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- 为避免泄漏元数据信息，请在部署前将以下值设置为 false -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <!-- 要接收故障异常详细信息以进行调试，请将以下值设置为 true。在部署前设置为 false 以避免泄漏异常信息 -->
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        若要在调试过程中浏览 Web 应用程序根目录，请将下面的值设置为 True。
        在部署之前将该值设置为 False 可避免泄露 Web 应用程序文件夹信息。
      -->
    <directoryBrowse enabled="true" />
  </system.webServer>
  <system.serviceModel>
      <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IService" />
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://localhost:8020/Service/IFlightLogService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IService"
        contract="FlightLogSvc.IFlightLogService" name="BasicHttpBinding_IFlightLogService" />
      <endpoint address="http://localhost:6500/DocumentService.svc"
          binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IService"
          contract="Doc.IDocumentService" name="BasicHttpBinding_IDocumentService" />
     <endpoint address="http://localhost:8041/AircraftService.svc"
          binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IService"
          contract="UniCloud.ServiceContracts.IAircraftService" name="BasicHttpBinding_IAircraftService" />
    </client>
  </system.serviceModel>
  <runtime>
    <!--<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="AutoMapper" publicKeyToken="be96cd2c38ef1005" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.1.0" newVersion="2.2.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.EnterpriseLibrary.Common" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.505.0" newVersion="5.0.505.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.505.0" newVersion="2.1.505.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Configuration" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.505.0" newVersion="2.1.505.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Interception" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.505.0" newVersion="2.1.505.0" />
      </dependentAssembly>
    </assemblyBinding>-->
    <!--<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="AutoMapper" publicKeyToken="be96cd2c38ef1005" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.1.0" newVersion="2.2.1.0" />
      </dependentAssembly>
    </assemblyBinding>-->
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
</configuration>